--- 2.11.12/scala/collection/immutable/Stream.scala
+++ overrides-2.11/scala/collection/immutable/Stream.scala
@@ -1147,10 +1147,15 @@
    */
   class StreamCanBuildFrom[A] extends GenericCanBuildFrom[A]
 
-  implicit def canBuildFrom[A]: CanBuildFrom[Coll, A, Stream[A]] = new StreamCanBuildFrom[A]
+  @inline override def ReusableCBF: GenericCanBuildFrom[Nothing] = ReusableCBFInstance
+  private object ReusableCBFInstance extends GenericCanBuildFrom[Nothing] {
+    @inline override def apply() = newBuilder[Nothing]
+  }
 
+  @inline implicit def canBuildFrom[A]: CanBuildFrom[Coll, A, Stream[A]] = new StreamCanBuildFrom[A]
+
   /** Creates a new builder for a stream */
-  def newBuilder[A]: Builder[A, Stream[A]] = new StreamBuilder[A]
+  @inline def newBuilder[A]: Builder[A, Stream[A]] = new StreamBuilder[A]
 
   import scala.collection.{Iterable, Seq, IndexedSeq}
 
@@ -1171,10 +1176,10 @@
   }
 
   /** The empty stream */
-  override def empty[A]: Stream[A] = Empty
+  @inline override def empty[A]: Stream[A] = Empty
 
   /** A stream consisting of given elements */
-  override def apply[A](xs: A*): Stream[A] = xs.toStream
+  @inline override def apply[A](xs: A*): Stream[A] = xs.toStream
 
   /** A wrapper class that adds `#::` for cons and `#:::` for concat as operations
    *  to streams.
