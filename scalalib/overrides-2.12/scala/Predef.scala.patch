--- 2.12.15/scala/Predef.scala
+++ overrides-2.12/scala/Predef.scala
@@ -151,9 +151,9 @@
   /**  @group aliases */
   type Set[A]     = immutable.Set[A]
   /**  @group aliases */
-  val Map         = immutable.Map
+  @inline def Map         = immutable.Map
   /**  @group aliases */
-  val Set         = immutable.Set
+  @inline def Set         = immutable.Set
 
   // Manifest types, companions, and incantations for summoning
   @annotation.implicitNotFound(msg = "No ClassManifest available for ${T}.")
@@ -167,13 +167,13 @@
   // @deprecated("use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead", "2.10.0")
   type Manifest[T]      = scala.reflect.Manifest[T]
   @deprecated("use `scala.reflect.ClassTag` instead", "2.10.0")
-  val ClassManifest     = scala.reflect.ClassManifest
+  @inline def ClassManifest     = scala.reflect.ClassManifest
   // TODO undeprecated until Scala reflection becomes non-experimental
   // @deprecated("use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead", "2.10.0")
-  val Manifest          = scala.reflect.Manifest
+  @inline def Manifest          = scala.reflect.Manifest
   // TODO undeprecated until Scala reflection becomes non-experimental
   // @deprecated("this notion doesn't have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.", "2.10.0")
-  val NoManifest        = scala.reflect.NoManifest
+  @inline def NoManifest        = scala.reflect.NoManifest
 
   // TODO undeprecated until Scala reflection becomes non-experimental
   // @deprecated("use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead", "2.10.0")
